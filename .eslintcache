[{"C:\\Users\\maker\\Documents\\react-final-mkd5329\\src\\index.js":"1","C:\\Users\\maker\\Documents\\react-final-mkd5329\\src\\App.js":"2","C:\\Users\\maker\\Documents\\react-final-mkd5329\\src\\reportWebVitals.js":"3","C:\\Users\\maker\\Documents\\react-final-mkd5329\\src\\mycomponent.js":"4","C:\\Users\\maker\\Documents\\react-final-mkd5329\\src\\Courses.js":"5","C:\\Users\\maker\\Documents\\react-final-mkd5329\\src\\serviceWorkerRegistration.js":"6"},{"size":741,"mtime":1607028445842,"results":"7","hashOfConfig":"8"},{"size":5818,"mtime":1607046211780,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":3483,"mtime":1606951473891,"results":"11","hashOfConfig":"8"},{"size":4157,"mtime":1607048420221,"results":"12","hashOfConfig":"8"},{"size":5064,"mtime":499162500000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"657g0f",{"filePath":"17","messages":"18","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\maker\\Documents\\react-final-mkd5329\\src\\index.js",[],["31","32"],"C:\\Users\\maker\\Documents\\react-final-mkd5329\\src\\App.js",["33","34","35","36","37","38","39","40","41","42","43"],"import './App.css';\nimport React from 'react';\nimport {\n    Col, Input, Button, Card, CardBody, CardTitle, CardText, Modal, ModalBody, ModalHeader, ModalFooter,Row,Table, Dropdown, DropdownToggle, DropdownItem, DropdownMenu\n\n} from 'reactstrap';\nimport Courses from './Courses'\nclass App extends React.Component {\nconstructor(props){\nsuper(props)\nthis.state = {courses:[], modal:false, courseName:\"\",courseDetails:\"\",courseDescription:\"\", courseDepartment:1};\nthis.getInitData = this.getInitData.bind(this);\nthis.toggle = this.toggle.bind(this);\nthis.dropdownToggle = this.dropdownToggle.bind(this);\nthis.addCourse = this.addCourse.bind(this);\n\n}\n\n    dropdownToggle(){\n        this.setState({dropdownOpen:!this.state.dropdownOpen});}\n\n    fetchData = () => {\n        //In package.json add \"proxy\": \"http://localhost:5000\"\n        //This will allow redirect to REST api in Flask w/o CORS errors\n         fetch('/coursedata')\n         .then(\n             response => response.json()\n             )//The promise response is returned, then we extract the json data\n         .then (jsonOutput => //jsonOutput now has result of the data extraction\n                  {\n\n                  this.getInitData(jsonOutput)\n                  }\n              )\n      }\n\n      componentDidMount(){\n        this.fetchData();\n    }\n\n\n    getInitData(jsonOb){\n    let ob = JSON.parse(jsonOb);\n    console.log(ob);\n\n    //console.log(typeof(ob))\n    //console.log(ob)\n    let element;\n    let index;\n    //let id;\n    //let name;\n    //let details;\n    //let c_desc;\n    let newCourses = []\n    for(index = 0; index<ob.length;index++){\n    element = ob[index];\n    let theId = element[0];\n    let theDeptId = element[1];\n    let theName = element[2];\n    let theDetails = element[3];\n    let theC_Desc = element[4];\n    let theDepartment = element[5];\n    let theCollege = element[6];\n    newCourses.push({id: theId ,dept_id: theDeptId, name:theName,details:theDetails,c_desc:theC_Desc,department:theDepartment,college:theCollege});\n    }\n    //console.log(newCourses)\n    this.setState({courses:newCourses});\n\n\n    }\n    toggle(){\n    this.setState({modal:!this.state.modal});\n    }\n\n  render(){\n  return (\n    <div>\n\n    <h1>Course List</h1>\n    <div></div>\n\n    <Courses courses = {this.state.courses} putter = {this.doPut}/>\n\n    <Modal isOpen = {this.state.modal} toggle = {this.toggle}>\n         <ModalHeader>\n         Add Course\n         </ModalHeader>\n         <ModalBody>\n         <div>Course Name</div>\n         <div><Input type='text' placeholder=\"Enter Course Name\" onChange={this.updateCourseName}></Input></div>\n         <div>Course Description</div>\n         <div><Input type='text' placeholder=\"Enter Course Description\" onChange={this.updateCourseDescription}></Input></div>\n         <div>Course Details</div>\n         <div><Input type='text' placeholder=\"Enter Course Details\" onChange={this.updateCourseDetails}></Input></div>\n        <div>Department</div>\n        <div>\n        <select onChange = {this.updateCourseDepartment}>\n        <option value = \"1\">Software Engineering</option>\n        <option value = \"2\">Computer Science</option>\n        <option value = \"3\">Computer Engineering</option>\n        <option value = \"4\">Virology</option>\n        </select>\n        </div>\n         </ModalBody>\n         <ModalFooter>\n         <Button onClick = {this.toggle}>Cancel</Button><Button onClick = {this.addCourse}>Ok!</Button>\n         </ModalFooter>\n         </Modal>\n    <Button color = \"primary\" onClick = {this.toggle}>Add</Button>\n\n    </div>\n  );\n}\nupdateCourseName = (e) =>\n{\nthis.setState({courseName: e.target.value})\n}\nupdateCourseDepartment = (e) =>\n{\nthis.setState({courseDepartment: e.target.value})\n//console.log(this.state.courseDepartment)\n//console.log(typeof(this.state.courseDepartment))\n}\nupdateCourseDescription= (e) =>{\nthis.setState({courseDescription: e.target.value})\n}\n\nupdateCourseDetails = (e) =>{\nthis.setState({courseDetails: e.target.value})\n}\n\naddCourse(){\nthis.doPost(this.state.courseName,this.state.courseDetails,this.state.courseDescription,this.state.courseDepartment)\n\n\n\nthis.setState({modal:!this.state.modal,courseName:\"\",courseDepartment:1,courseDescription:\"\"});\n}\n\ndoPost = (thename,thedetails,description,department) => {\n        //console.log(department)\n        //console.log(typeof(department))\n        fetch('/coursedata', {\n            method: 'POST',\n            body: JSON.stringify({\n                name: thename,\n                details: thedetails,\n                c_desc: description,\n                dept_id: department\n            }),\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        }).then(response =>{\n\n            return response.json()\n        }).then(json => {\n            this.fetchData();\n        });\n\n}\ndoPut = (theid,thename,thedetails,description,department) => {\n        //console.log(department)\n        //console.log(typeof(department))\n        fetch('/coursedata/' + theid, {\n            method: 'PUT',\n            body: JSON.stringify({\n                name: thename,\n                details: thedetails,\n                c_desc: description,\n                dept_id: department\n            }),\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        }).then(response =>{\n\n            return response.json()\n        }).then(json => {\n            this.fetchData();\n        });\n\n}\n\n}\nexport default App;\n","C:\\Users\\maker\\Documents\\react-final-mkd5329\\src\\reportWebVitals.js",[],"C:\\Users\\maker\\Documents\\react-final-mkd5329\\src\\mycomponent.js",["44"],"import React, { Component } from 'react';\r\nimport {Button, Input, Label, Modal, ModalBody, ModalFooter} from 'reactstrap';\r\n\r\nclass MyComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={data: \"\",\r\n                firstName: \"\", //For capturing user input\r\n                lastName: \"\", //For capturing user input\r\n                showModal: false,\r\n                testMessage: \"\"}\r\n    }\r\n\r\n    updateData = (apiResponse) => {\r\n        this.setState({data: apiResponse})\r\n    }\r\n\r\n    fetchMessage = () => {\r\n        //In package.json add \"proxy\": \"http://localhost:5000\" \r\n        //This will allow redirect to REST api in Flask w/o CORS errors\r\n         fetch('/test_message')\r\n         .then(\r\n             response => response.json() \r\n             )//The promise response is returned, then we extract the json data\r\n         .then (jsonOutput => //jsonOutput now has result of the data extraction\r\n                  {\r\n                      this.setState({testMessage: jsonOutput})\r\n                    }\r\n              )\r\n      }\r\n\r\n    fetchData = () => {\r\n        //In package.json add \"proxy\": \"http://localhost:5000\" \r\n        //This will allow redirect to REST api in Flask w/o CORS errors\r\n         fetch('/example_api')\r\n         .then(\r\n             response => response.json() \r\n             )//The promise response is returned, then we extract the json data\r\n         .then (jsonOutput => //jsonOutput now has result of the data extraction\r\n                  {\r\n                      this.updateData(jsonOutput)\r\n                    }\r\n              )\r\n      }\r\n    componentDidMount(){\r\n        this.fetchData();\r\n    }\r\n\r\n    updateFirstName = (e) =>\r\n     { this.setState({firstName: e.target.value}) //Update the text data in state\r\n    }\r\n    updateLastName = (e) => \r\n    { this.setState({lastName: e.target.value}) //Update the text data in state\r\n    }\r\n\r\n    handleSubmit = ()=> {\r\n            let msg = \r\n            'Your name is ' + this.state.firstName + ' ' + this.state.lastName; //Use the updated state variables to capture the user input\r\n            this.setState({showModal: true,\r\n                    summary: msg})\r\n    }\r\n    render(){\r\n        {/*If the data has not yet been loaded from the server, return empty page */}\r\n        if ( this.state.data == null )\r\n        return (<div>No data</div>)\r\n        else\r\n        {\r\n        return (\r\n            <div className='m-4'>\r\n                <div><h2>The api response is: {this.state.data}</h2>\r\n                <Label for=\"fName\">First Name</Label>\r\n                <Input id=\"fName\" type='text' placeholder=\"Enter firstname\" onChange={this.updateFirstName}></Input>\r\n                <Label for=\"lName\">Last Name</Label>\r\n                <Input id=\"lName\" type='text' placeholder='Enter lastname' onChange={this.updateLastName}></Input>\r\n                <Button normal onClick={this.handleSubmit}>Submit</Button>\r\n                <Modal isOpen={this.state.showModal} onOpened={this.fetchMessage}>\r\n                    <ModalBody>{this.state.summary}\r\n                    <p>The message was: { this.state.testMessage}</p></ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={()=>this.setState({showModal:false})}>Ok</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                </div>\r\n            </div>\r\n        )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MyComponent;",["45","46"],"C:\\Users\\maker\\Documents\\react-final-mkd5329\\src\\Courses.js",["47","48","49","50","51","52","53","54"],"import {\r\n    Col, Button, Card, CardBody, CardTitle, Input, CardText, Modal, ModalBody, ModalHeader, ModalFooter,Row,Table\r\n} from 'reactstrap';\r\nimport React from 'react';\r\nimport './App.css';\r\n\r\n/*\r\n<Modal isOpen = {this.state.modal} toggle = {this.toggle}>\r\n         <ModalHeader>\r\n         {name}\r\n         </ModalHeader>\r\n         <ModalBody>\r\n         {details}\r\n         </ModalBody>\r\n         <ModalFooter>\r\n         {c_desc}\r\n         <Button onClick = {this.toggle}>Ok, I got it!</Button>\r\n         </ModalFooter>\r\n         </Modal>\r\n*/\r\n//import info from './information.png'\r\n\r\n\r\nclass Courses extends React.Component {\r\nconstructor(props){\r\nsuper(props)\r\nthis.state = {modal:false,CourseID:\"\",CourseName:\"\",CourseDetails:\"\",CourseDescription:\"\",CourseDepartment:\"1\",CourseCollege:\"\", newName:\"\",newDetails:\"\",newDescription:\"\",newDepartment:\"1\"}\r\nthis.toggle = this.toggle.bind(this);\r\nthis.courseToggle = this.courseToggle.bind(this);\r\nthis.confirm = this.confirm.bind(this);\r\n\r\n}\r\n\r\nupdateCourseName = (e) =>\r\n{\r\nthis.setState({newName: e.target.value})\r\n}\r\nupdateCourseDepartment = (e) =>\r\n{\r\n\r\nthis.setState({newDepartment: e.target.value})\r\n//console.log(this.state.courseDepartment)\r\n//console.log(typeof(this.state.courseDepartment))\r\n}\r\nupdateCourseDescription= (e) =>{\r\nthis.setState({newDescription: e.target.value})\r\n}\r\n\r\nupdateCourseDetails = (e) =>{\r\nthis.setState({newDetails: e.target.value})\r\n}\r\n\r\n\r\n\r\nrender(){\r\nreturn(\r\n<>\r\n<Modal isOpen = {this.state.modal} toggle = {this.toggle}>\r\n         <ModalHeader>\r\n         Edit Course\r\n         </ModalHeader>\r\n         <ModalBody>\r\n         <div>Course Name</div>\r\n         <div><Input type='text' defaultValue={this.state.CourseName} onChange={this.updateCourseName}></Input></div>\r\n         <div>Course Description</div>\r\n         <div><Input type='text' defaultValue={this.state.CourseDescription} onChange={this.updateCourseDescription}></Input></div>\r\n         <div>Course Details</div>\r\n         <div><Input type='text' defaultValue={this.state.CourseDetails} onChange={this.updateCourseDetails}></Input></div>\r\n         <div>Department</div>\r\n        <div>\r\n        <select onChange = {this.updateCourseDepartment}>\r\n        <option value = \"1\">Software Engineering</option>\r\n        <option value = \"2\">Computer Science</option>\r\n        <option value = \"3\">Computer Engineering</option>\r\n        <option value = \"4\">Virology</option>\r\n        </select>\r\n        </div>\r\n         </ModalBody>\r\n         <ModalFooter>\r\n         <Button onClick = {this.toggle}>Cancel</Button>\r\n         <Button color = \"primary\" onClick = {this.confirm}>Confirm</Button>\r\n         </ModalFooter>\r\n         </Modal>\r\n\r\n<Table>\r\n<thead>\r\n<tr>\r\n<th></th>\r\n<th>name</th>\r\n<th>description</th>\r\n<th>details</th>\r\n<th>department</th>\r\n<th>college</th>\r\n</tr>\r\n{this.renderTableData(this.props.courses)}\r\n</thead>\r\n\r\n</Table>\r\n</>\r\n\r\n)\r\n}\r\n\r\ncourseToggle(id,cname,cdetails,cdesc,cdepartment,ccollege)\r\n{\r\n//console.log(cname)\r\nthis.setState({CourseID:id,CourseName:cname,CourseDetails:cdetails,CourseDescription:cdesc,CourseDepartment:cdepartment,CourseCollege:ccollege,modal:!this.state.modal,newName:cname,newDepartment:\"1\",newDetails:cdetails,newDescription:cdesc});\r\n}\r\ntoggle(){\r\n    this.setState({modal:!this.state.modal});\r\n    }\r\n    confirm(){\r\n    this.props.putter(this.state.CourseID,this.state.newName,this.state.newDetails,this.state.newDescription,this.state.newDepartment);\r\n    this.setState({modal:!this.state.modal,newDepartment:\"\", newName:\"\",newDetails:\"\",newDepartment:\"1\",newDescription:\"\"});\r\n    }\r\n\r\nrenderTableData(array) {\r\n      return array.map((course, index) => {\r\n         const {id, name, details,c_desc,dept_id,department,college} = course //destructuring\r\n         return (\r\n            <tr>\r\n            <Button onClick = {() => this.courseToggle(id,name,details,c_desc,department,college)}>Edit</Button>\r\n               <td>{name}</td>\r\n               <td>{c_desc}</td>\r\n               <td>{details}</td>\r\n               <td>{department}</td>\r\n               <td>{college}</td>\r\n            </tr>\r\n         )\r\n      })\r\n   }\r\n\r\n\r\n}\r\n\r\nexport default Courses;","C:\\Users\\maker\\Documents\\react-final-mkd5329\\src\\serviceWorkerRegistration.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":4,"column":5,"nodeType":"61","messageId":"62","endLine":4,"endColumn":8},{"ruleId":"59","severity":1,"message":"63","line":4,"column":25,"nodeType":"61","messageId":"62","endLine":4,"endColumn":29},{"ruleId":"59","severity":1,"message":"64","line":4,"column":31,"nodeType":"61","messageId":"62","endLine":4,"endColumn":39},{"ruleId":"59","severity":1,"message":"65","line":4,"column":41,"nodeType":"61","messageId":"62","endLine":4,"endColumn":50},{"ruleId":"59","severity":1,"message":"66","line":4,"column":52,"nodeType":"61","messageId":"62","endLine":4,"endColumn":60},{"ruleId":"59","severity":1,"message":"67","line":4,"column":105,"nodeType":"61","messageId":"62","endLine":4,"endColumn":108},{"ruleId":"59","severity":1,"message":"68","line":4,"column":109,"nodeType":"61","messageId":"62","endLine":4,"endColumn":114},{"ruleId":"59","severity":1,"message":"69","line":4,"column":116,"nodeType":"61","messageId":"62","endLine":4,"endColumn":124},{"ruleId":"59","severity":1,"message":"70","line":4,"column":126,"nodeType":"61","messageId":"62","endLine":4,"endColumn":140},{"ruleId":"59","severity":1,"message":"71","line":4,"column":142,"nodeType":"61","messageId":"62","endLine":4,"endColumn":154},{"ruleId":"59","severity":1,"message":"72","line":4,"column":156,"nodeType":"61","messageId":"62","endLine":4,"endColumn":168},{"ruleId":"73","severity":1,"message":"74","line":63,"column":9,"nodeType":"75","messageId":"76","endLine":63,"endColumn":86},{"ruleId":"55","replacedBy":"77"},{"ruleId":"57","replacedBy":"78"},{"ruleId":"59","severity":1,"message":"60","line":2,"column":5,"nodeType":"61","messageId":"62","endLine":2,"endColumn":8},{"ruleId":"59","severity":1,"message":"63","line":2,"column":18,"nodeType":"61","messageId":"62","endLine":2,"endColumn":22},{"ruleId":"59","severity":1,"message":"64","line":2,"column":24,"nodeType":"61","messageId":"62","endLine":2,"endColumn":32},{"ruleId":"59","severity":1,"message":"65","line":2,"column":34,"nodeType":"61","messageId":"62","endLine":2,"endColumn":43},{"ruleId":"59","severity":1,"message":"66","line":2,"column":52,"nodeType":"61","messageId":"62","endLine":2,"endColumn":60},{"ruleId":"59","severity":1,"message":"67","line":2,"column":105,"nodeType":"61","messageId":"62","endLine":2,"endColumn":108},{"ruleId":"79","severity":1,"message":"80","line":114,"column":87,"nodeType":"81","messageId":"82","endLine":114,"endColumn":100},{"ruleId":"59","severity":1,"message":"83","line":119,"column":42,"nodeType":"61","messageId":"62","endLine":119,"endColumn":49},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'CardText' is defined but never used.","'Row' is defined but never used.","'Table' is defined but never used.","'Dropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownItem' is defined but never used.","'DropdownMenu' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["84"],["85"],"no-dupe-keys","Duplicate key 'newDepartment'.","ObjectExpression","unexpected","'dept_id' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]